buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.flywaydb:flyway-mysql:9.11.0'
    }
}

plugins {
    id 'java-conventions'
    id 'application'
    id 'jacoco-report-aggregation'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.flywaydb.flyway' version '9.11.0'
}

group 'io.github.gabrmsouza.subscription.infrastructure'

bootJar {
    archiveFileName = "application.jar"
    destinationDirectory.set(file("${rootProject.buildDir}/libs"))
}

ext {
    springdoc = "2.6.0"
}

dependencies {
    implementation(project(":domain"))
    implementation(project(":application"))

    implementation("com.mysql:mysql-connector-j")

    implementation('ch.qos.logback:logback-classic:1.4.12')
    implementation('net.logstash.logback:logstash-logback-encoder:7.0.1')

    implementation("com.fasterxml.jackson.module:jackson-module-blackbird")

    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-tomcat'
    }
    implementation('org.springframework.boot:spring-boot-starter-undertow')
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.springframework.boot:spring-boot-starter-oauth2-resource-server')
    implementation("org.springframework.boot:spring-boot-starter-validation")
    implementation("org.springframework.boot:spring-boot-starter-data-jdbc")

    implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:$springdoc") {
        exclude group: 'org.springdoc', module: 'springdoc-openapi-ui'
    }

    testImplementation(project(path: ':domain', configuration: 'testClasses'))

    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('org.springframework.security:spring-security-test')
    testImplementation("org.springframework.cloud:spring-cloud-contract-wiremock")
    testImplementation("org.springframework.boot:spring-boot-testcontainers")

    testImplementation("com.h2database:h2")
    testImplementation("org.flywaydb:flyway-core")
    testImplementation("org.flywaydb:flyway-mysql")

    testImplementation('org.testcontainers:testcontainers:1.19.8')
    testImplementation('org.testcontainers:junit-jupiter:1.19.8')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.3"
    }
}

flyway {
    url = System.getenv('FLYWAY_DB') ?: 'jdbc:mysql://localhost:3306/adm_videos'
    user = System.getenv('FLYWAY_USER') ?: 'root'
    password = System.getenv('FLYWAY_PASS') ?: '123456'
}

testCodeCoverageReport {
    reports {
        xml.required = true
        xml.outputLocation = file("$rootDir/build/reports/jacooco/test/jacocoTestResport.xml")

        html.required = true
        html.outputLocation = file("$rootDir/build/reports/jacooco/test/")
    }
}

tasks.named("jacocoTestReport") {
    dependsOn tasks.named("testCodeCoverageReport", JacocoReport)
}